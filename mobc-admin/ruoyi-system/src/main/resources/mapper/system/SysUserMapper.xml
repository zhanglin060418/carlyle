<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysUserMapper">

	<resultMap type="SysUser" id="SysUserResult">
		<id     property="userId"       column="user_id"      />
		<result property="deptId"       column="dept_id"      />
		<result property="userName"     column="user_name"    />
		<result property="nickName"     column="nick_name"    />
		<result property="email"        column="email"        />
		<result property="phonenumber"  column="phonenumber"  />
		<result property="sex"          column="sex"          />
		<result property="avatar"       column="avatar"       />
		<result property="password"     column="password"     />
		<result property="payPassword"  column="pay_password"     />
		<result property="status"       column="status"       />
		<result property="isWithdarw"   column="is_withdarw"       />
		<result property="isRebate"     column="is_rebate"       />
		<result property="isInviteCode" column="is_invite_code"       />
		<result property="delFlag"      column="del_flag"     />
		<result property="loginIp"      column="login_ip"     />
		<result property="loginDate"    column="login_date"   />
		<result property="createBy"     column="create_by"    />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<result property="inviteCode"   column="invite_code"  />
		<result property="parentId"     column="parent_id"    />
		<result property="parentUsername"     column="parent_username"    />
		<result property="grandId"      column="grand_id"     />
		<result property="grandUsername"      column="grand_username"     />
		<result property="greatGrandId" column="great_grand_id" />
		<result property="greatGrandUsername" column="great_grand_username" />
		<result property="topId"        column="top_id"       />
		<result property="managerId"        column="manager_id"       />
		<result property="managerName"        column="manager_name"       />
		<result property="agentId"        column="agent_id"       />
		<result property="agentName"        column="agent_name"       />
		<result property="topName"        column="top_name"       />
		<result property="userType"		column="user_type"	  />
		<result property="whatsapp"		column="whatsapp"	  />
		<result property="remark"		column="remark"	  />
		<result property="telegram"		column="telegram"	  />
		<result property="balance"		column="balance"	  />
		<result property="availableAmt" column="available_amt"/>
		<result property="assetBalance" column="asset_balance"	  />
		<result property="firstDeposit"		column="first_deposit"	  />
		<result property="vipLevel"		column="vip_level"	  />
		<association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />
		<collection  property="roles"   javaType="java.util.List"           resultMap="RoleResult" />
	</resultMap>

	<resultMap id="deptResult" type="SysDept">
		<id     property="deptId"    column="dept_id"     />
		<result property="parentId"  column="parent_id"   />
		<result property="deptName"  column="dept_name"   />
		<result property="ancestors" column="ancestors"   />
		<result property="orderNum"  column="order_num"   />
		<result property="leader"    column="leader"      />
		<result property="status"    column="dept_status" />
	</resultMap>

	<resultMap id="RoleResult" type="SysRole">
		<id     property="roleId"       column="role_id"        />
		<result property="roleName"     column="role_name"      />
		<result property="roleKey"      column="role_key"       />
		<result property="roleSort"     column="role_sort"      />
		<result property="dataScope"     column="data_scope"    />
		<result property="status"       column="role_status"    />
	</resultMap>

	<sql id="selectUserVo">
		SELECT
			u.user_id,
			u.dept_id,
			u.manager_id,
			u.agent_id,
			u.user_name,
			u.is_withdarw,
			u.is_rebate,
			u.is_invite_code,
			u.nick_name,
			u.email,
			u.avatar,
			u.phonenumber,
			u.PASSWORD,
			u.pay_password,
			u.sex,
			u.STATUS,
			u.del_flag,
			u.login_ip,
			u.login_date,
			u.create_by,
			u.create_time,
			u.remark,
			u.invite_code,
			u.parent_id,
			u.grand_id,
			u.great_grand_id,
			u.top_id,
			u.user_type,
			u.whatsapp,
			u.telegram,
			u.vip_level,
			d.dept_id,
			d.parent_id,
			d.ancestors,
			d.dept_name,
			d.order_num,
			d.leader,
			d.STATUS AS dept_status,
			r.role_id,
			r.role_name,
			r.role_key,
			r.role_sort,
			r.data_scope,
			r.STATUS AS role_status
		FROM
			sys_user u
			LEFT JOIN sys_dept d ON u.dept_id = d.dept_id
			LEFT JOIN sys_user_role ur ON u.user_id = ur.user_id
			LEFT JOIN sys_role r ON r.role_id = ur.role_id
	</sql>
	<!--用户列表-->
	<select id="selectUserListDetail" parameterType="SysUser" resultMap="SysUserResult">
		SELECT
		u.user_id,
		u.dept_id,
		u.user_name,
		u.nick_name,
		u.email,
		u.avatar,
		u.phonenumber,
		u.PASSWORD,
		u.pay_password,
		u.sex,
		u.STATUS,
		u.del_flag,
		u.login_ip,
		u.login_date,
		u.create_by,
		u.create_time,
		u.remark,
		u.invite_code,
		u.parent_id,
		u.is_withdarw,
		u.is_rebate,
		u.is_invite_code,
		u2.user_name parent_username,
		u.grand_id,
		u3.user_name grand_username,
		u.great_grand_id,
		u4.user_name great_grand_username,
		u.top_id,
		u.vip_level,
		u.manager_id,
		u5.user_name top_name,
		u6.user_name manager_name,
		u7.user_name agent_name,
		u.user_type,
		u.whatsapp,
		u.telegram
		FROM
		sys_user u
		LEFT JOIN sys_user u2 ON u.parent_id = u2.user_id
		LEFT JOIN sys_user u3 ON u.grand_id = u3.user_id
		LEFT JOIN sys_user u4 ON u.great_grand_id = u4.user_id
		LEFT JOIN sys_user u5 ON u.top_id = u5.user_id
		LEFT JOIN sys_user u6 ON u.manager_id = u6.user_id
		LEFT JOIN sys_user u7 ON u.agent_id = u7.user_id
		WHERE
		u.del_flag = '0'
		AND u.user_type = '10'
		<if test="userName != null and userName != ''">
			AND u.user_name  like concat('%',#{userName})
		</if>
		<if test="userId != null and userId!= ''">
			and u.user_id  = #{userId}
		</if>
		<if test="topId != null and topId!= ''">
		  and u.top_id  = #{topId}
		</if>
		<if test="managerId != null and managerId!= ''">
			and u.manager_id  = #{managerId}
		</if>
		<if test="agentId != null and agentId!= ''">
			and u.agent_id  = #{agentId}
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="loginIp != null and loginIp != ''">
			AND u.login_ip = #{loginIp}
		</if>
		<if test="parentUsername != null and parentUsername != ''">
			AND u2.user_name= #{parentUsername}
		</if>
		<if test="topName != null and topName != ''">
			AND u5.user_name= #{topName}
		</if>
		<if test="managerName != null and managerName != ''">
			AND u6.user_name= #{managerName}
		</if>
		<if test="agentName != null and agentName != ''">
			AND u7.user_name= #{agentName}
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<!-- 数据范围过滤 -->
		<if test="propName == 'createTime' and sortType == 'descending'">
			order by u.create_time desc
		</if>
		<if test="propName == 'createTime'  and sortType == 'ascending' ">
			order by u.create_time asc
		</if>
		<if test="propName == 'loginDate' and sortType == 'descending'">
			order by u.login_date desc
		</if>
		<if test="propName == 'loginDate' and sortType == 'ascending'">
			order by u.login_date asc
		</if>
		${params.dataScope}
	</select>
	<!--业务员列表-->
	<select id="selectUserListBySys" parameterType="SysUser" resultMap="SysUserResult">
		SELECT
		u.user_id,
		u.dept_id,
		u.user_name,
		u.nick_name,
		u.email,
		u.avatar,
		u.vip_level,
		u.phonenumber,
		u.PASSWORD,
		u.pay_password,
		u.sex,
		u.STATUS,
		u.del_flag,
		u.login_ip,
		u.login_date,
		u.create_by,
		u.create_time,
		u.remark,
		u.invite_code,
		u.parent_id,
		u.grand_id,
		u.great_grand_id,
		u.top_id,
		u.user_type,
		u.whatsapp,
		u.telegram,
		u.manager_id,
		u3.user_name manager_name,
		u4.user_name agent_name
		FROM
		sys_user u
		left join sys_user u3 on u.manager_id = u3.user_id
		left join sys_user u4 on u.agent_id = u4.user_id
		WHERE
		u.del_flag = '0'
		AND u.user_type = '01'
		<if test="userId != null and userId != 0">
			AND u.user_id = #{userId}
		</if>
		<if test="managerId != null and managerId!= ''">
		  and u.manager_id  = #{managerId}
		</if>
		<if test="agentId != null and agentId!= ''">
			and u.agent_id  = #{agentId}
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name  like concat('%', #{userName}, '%')
		</if>
		<if test="managerId != null and managerId!= ''">
			AND u.manager_id  = #{managerId}
		</if>
		<if test="managerName != null  and managerName != ''">
			AND u3.user_name = #{managerName}
		 </if>
		<if test="agentName != null  and agentName != ''">
			AND u4.user_name = #{agentName}
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		order by u.create_time desc
		${params.dataScope}
	</select>
	<!--经理列表-->
	<select id="selectManagerList" parameterType="SysUser" resultMap="SysUserResult">
		SELECT
		u.user_id,
		u.dept_id,
		u.user_name,
		u.nick_name,
		u.email,
		u.avatar,
		u.phonenumber,
		u.PASSWORD,
		u.pay_password,
		u.sex,
		u.STATUS,
		u.del_flag,
		u.login_ip,
		u.login_date,
		u.create_by,
		u.create_time,
		u.remark,
		u.invite_code,
		u.user_type,
		u.whatsapp,
		u2.user_name agent_name,
		u.telegram
		FROM
		sys_user u left join sys_user u2 on u.agent_id = u2.user_id
		WHERE
		u.del_flag = '0'
		AND u.user_type = '02'
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="agentId != null and agentId != ''">
			AND u.agent_id = #{agentId}
		</if>
		<if test="agentName != null and agentName != ''">
			AND u2.user_name = #{agentName}
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		order by u.create_time desc
		${params.dataScope}
	</select>

	<!--代理商列表-->
	<select id="selectAgentList" parameterType="SysUser" resultMap="SysUserResult">
		SELECT
		u.user_id,
		u.dept_id,
		u.user_name,
		u.nick_name,
		u.email,
		u.avatar,
		u.phonenumber,
		u.PASSWORD,
		u.pay_password,
		u.sex,
		u.STATUS,
		u.del_flag,
		u.login_ip,
		u.login_date,
		u.create_by,
		u.create_time,
		u.remark,
		u.invite_code,
		u.user_type,
		u.whatsapp,
		u.telegram
		FROM
		sys_user u
		WHERE
		u.del_flag = '0'
		AND u.user_type = '03'
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		order by u.create_time desc
		${params.dataScope}
	</select>

	<select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
		SELECT
		u.user_id,
		u.dept_id,
		u.nick_name,
		u.user_name,
		u.email,
		u.vip_level,
		u.avatar,
		u.phonenumber,
		u.pay_password,
		u.sex,
		u.STATUS,
		u.del_flag,
		u.login_ip,
		u.login_date,
		u.create_by,
		u.create_time,
		u.remark,
		u.invite_code,
		u.parent_id,
		u.grand_id,
		u.manager_id,
		u.great_grand_id,
		u.top_id,
		u.user_type
		FROM
		sys_user u
		WHERE
		u.del_flag = '0'
		<if test="userId != null and userId != 0">
			AND u.user_id = #{userId}
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<if test="parentId != null and parentId != 0">
			AND u.parent_id = #{parentId}
		</if>
		<if test="grandId != null and grandId != 0">
			AND u.grand_id = #{grandId}
		</if>
		<if test="greatGrandId != null and greatGrandId != 0">
			AND u.great_grand_id = #{greatGrandId}
		</if>
		<if test="agentId != null and agentId != 0">
			AND u.agent_id = #{agentId}
		</if>
		<if test="topId != null and topId != 0">
			AND u.top_id = #{topId}
		</if>
		<if test="managerId != null and managerId != 0">
			AND u.manager_id = #{managerId}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectAddedTodayChildUserList" parameterType="SysUser" resultMap="SysUserResult">
		select  u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time,  u.parent_id, u.grand_id, u.great_grand_id
		from sys_user u
		where date(u.create_time) >= current_date
		<if test="parentId != null and parentId != 0">
			AND u.parent_id = #{parentId}
		</if>
		<if test="grandId != null and grandId != 0">
			AND u.grand_id = #{grandId}
		</if>
		<if test="greatGrandId != null and greatGrandId != 0">
			AND u.great_grand_id = #{greatGrandId}
		</if>
		${params.dataScope}
	</select>

	<select id="selectAllocatedList" parameterType="SysUser" resultMap="SysUserResult">
		select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time
		from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		left join sys_user_role ur on u.user_id = ur.user_id
		left join sys_role r on r.role_id = ur.role_id
		where u.del_flag = '0' and r.role_id = #{roleId}
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectUnallocatedList" parameterType="SysUser" resultMap="SysUserResult">
		select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time
		from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		left join sys_user_role ur on u.user_id = ur.user_id
		left join sys_role r on r.role_id = ur.role_id
		where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
		and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_name = #{userName} and u.del_flag = '0'
	</select>

	<select id="selectUserByInviteCode" parameterType="String" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.invite_code = #{inviteCode} and u.del_flag = '0'
	</select>

	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
			SELECT
				u.user_id,
				u.dept_id,
				u.manager_id,
				u.agent_id,
				u.user_name,
				u.nick_name,
				u.email,
				u.avatar,
				u.phonenumber,
				u.PASSWORD,
				u.pay_password,
				u.sex,
				u.STATUS,
				u.is_withdarw,
		        u.is_rebate,
		        u.is_invite_code,
				u.del_flag,
				u.login_ip,
				u.login_date,
				u.create_by,
				u.create_time,
				u.remark,
				u.invite_code,
				u.parent_id,
				u2.user_name parent_username,
				u.grand_id,
				u3.user_name grand_username,
				u.great_grand_id,
				u4.user_name great_grand_username,
				u.top_id,
				u5.user_name top_username,
				u.user_type,
				u.whatsapp,
				u.vip_level,
				u.telegram
			FROM
				sys_user u
				LEFT JOIN sys_user u2 ON u.parent_id = u2.user_id
				LEFT JOIN sys_user u3 ON u.grand_id = u3.user_id
				LEFT JOIN sys_user u4 ON u.great_grand_id = u4.user_id
				LEFT JOIN sys_user u5 ON u.top_id = u5.user_id
			WHERE
				u.user_id = #{userId}
	</select>

	<select id="checkUserNameUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, user_name from sys_user where user_name = #{userName} and del_flag = '0' limit 1
	</select>

	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, phonenumber from sys_user where phonenumber = #{phonenumber} and del_flag = '0' limit 1
	</select>

	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, email from sys_user where email = #{email} and del_flag = '0' limit 1
	</select>

	<insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
	insert into sys_user(
	<if test="userId != null and userId != 0">user_id,</if>
	<if test="deptId != null and deptId != 0">dept_id,</if>
	<if test="userName != null and userName != ''">user_name,</if>
	<if test="nickName != null and nickName != ''">nick_name,</if>
	<if test="whatsapp != null and whatsapp != ''">whatsapp,</if>
	<if test="telegram != null and nickName != ''">telegram,</if>
	<if test="email != null and email != ''">email,</if>
	<if test="avatar != null and avatar != ''">avatar,</if>
	<if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
	<if test="sex != null and sex != ''">sex,</if>
	<if test="password != null and password != ''">password,</if>
	<if test="status != null and status != ''">status,</if>
	<if test="createBy != null and createBy != ''">create_by,</if>
	<if test="remark != null and remark != ''">remark,</if>
	<if test="inviteCode !=null and inviteCode != ''">invite_code,</if>
	<if test="userType != null and userType !=''">user_type,</if>
	<if test="parentId != null and parentId !=''">parent_id,</if>
	<if test="grandId != null and grandId !=''">grand_id,</if>
	<if test="greatGrandId != null and greatGrandId !=''">great_grand_id,</if>
	<if test="topId != null and topId !=''">top_id,</if>
	<if test="managerId != null and managerId !=''">manager_id,</if>
	<if test="agentId != null and agentId !=''">agent_id,</if>
	create_time
	)values(
	<if test="userId != null and userId != ''">#{userId},</if>
	<if test="deptId != null and deptId != ''">#{deptId},</if>
	<if test="userName != null and userName != ''">#{userName},</if>
	<if test="nickName != null and nickName != ''">#{nickName},</if>
	<if test="whatsapp != null and whatsapp != ''">#{whatsapp},</if>
	<if test="telegram != null and nickName != ''">#{telegram},</if>
	<if test="email != null and email != ''">#{email},</if>
	<if test="avatar != null and avatar != ''">#{avatar},</if>
	<if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
	<if test="sex != null and sex != ''">#{sex},</if>
	<if test="password != null and password != ''">#{password},</if>
	<if test="status != null and status != ''">#{status},</if>
	<if test="createBy != null and createBy != ''">#{createBy},</if>
	<if test="remark != null and remark != ''">#{remark},</if>
	<if test="inviteCode !=null and inviteCode != ''">#{inviteCode},</if>
	<if test="userType != null and userType != ''">#{userType},</if>
	<if test="parentId != null and parentId !=''">#{parentId},</if>
	<if test="grandId != null and grandId !=''">#{grandId},</if>
	<if test="greatGrandId != null and greatGrandId !=''">#{greatGrandId},</if>
	<if test="topId != null and topId !=''">#{topId},</if>
	<if test="managerId != null and managerId !=''">#{managerId},</if>
	<if test="agentId != null and agentId !=''">#{agentId},</if>
	sysdate()
	)
</insert>

	<update id="updateUser" parameterType="SysUser">
		update sys_user
		<set>
			<if test="userName != null and userName != ''">user_name = #{userName},</if>
			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
			<if test="email != null ">email = #{email},</if>
			<if test="whatsapp != null ">whatsapp = #{whatsapp},</if>
			<if test="telegram!= null ">telegram = #{telegram},</if>
			<if test="phonenumber != null ">phonenumber = #{phonenumber},</if>
			<if test="sex != null and sex != ''">sex = #{sex},</if>
			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
			<if test="password != null and password != ''">password = #{password},</if>
			<if test="payPassword != null and payPassword != ''">pay_password = #{payPassword},</if>
			<if test="status != null and status != ''">status = #{status},</if>
			<if test="isWithdarw != null and isWithdarw != ''">is_withdarw = #{isWithdarw},</if>
			<if test="isRebate != null and isRebate != ''">is_rebate = #{isRebate},</if>
			<if test="isInviteCode != null and isInviteCode != ''">is_invite_code = #{isInviteCode},</if>
			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
			<if test="vipLevel != null">vip_level = #{vipLevel},</if>
			<if test="remark != null">remark = #{remark},</if>
			update_time = sysdate()
		</set>
		where user_id = #{userId}
	</update>

	<update id="updateUserProfile" parameterType="SysUser">
		update sys_user
		<set>
			<if test="userName != null and userName != ''">user_name = #{userName},</if>
			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
			login_date = now()
		</set>
		where user_id = #{userId}
	</update>

	<update id="updateUserStatus" parameterType="SysUser">
		update sys_user set status = #{status} where user_id = #{userId}
	</update>

	<update id="updateUserAvatar" parameterType="SysUser">
		update sys_user set avatar = #{avatar} where user_name = #{userName}
	</update>

	<update id="resetUserPwd" parameterType="SysUser">
		update sys_user set password = #{password} where user_name = #{userName}
	</update>

	<delete id="deleteUserById" parameterType="Long">
		update sys_user set del_flag = '2' where user_id = #{userId}
	</delete>

	<delete id="deleteUserByIds" parameterType="Long">
		update sys_user set del_flag = '2' where user_id in
		<foreach collection="array" item="userId" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>

	<select id="getChildCount" parameterType="Long" resultType="Long">
		select count(user_id) from sys_user where parent_id=#{userId}
	</select>

	<select id="getGrandCount" parameterType="Long" resultType="Long">
		select count(user_id) from sys_user where grand_id=#{userId}
	</select>

	<select id="getGreatGrandCount" parameterType="Long" resultType="Long">
		select count(user_id) from sys_user where great_grand_id=#{userId}
	</select>

	<select id="getTodayChildCount" parameterType="Long" resultType="Long">
		select count(user_id) from sys_user where  date(create_time) = current_date  AND (parent_id = #{userId} OR grand_id = #{userId} OR great_grand_id = #{userId} )
	</select>

	<select id="getLevelAChild" parameterType="Long" resultType="String">
		select GROUP_CONCAT(user_name SEPARATOR ',') from sys_user where parent_id=#{userId}
	</select>

	<select id="getClerkList" parameterType="Long" resultType="String">
		select GROUP_CONCAT(user_name SEPARATOR ',') from sys_user where manager_id=#{userId} and user_type ='01'
	</select>

	<select id="slectClerkByUserId" parameterType="Long" resultMap="SysUserResult">
		SELECT
			u2.user_id,
			u2.user_name,
			u2.email,
			u2.avatar,
			u2.phonenumber,
			u2.invite_code,
			u2.user_name,
			u2.user_type,
			u2.whatsapp,
			u2.telegram
		FROM
			sys_user u
				LEFT JOIN sys_user u2 ON u.top_id = u2.user_id
		where u.user_id = #{userId}

	</select>


	<insert id="insertPanUserBalance" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
		insert into pan_user_balance(
			user_id,
			balance,
			available_amt,
			update_at
		)values(
				   #{userId},
				   #{balance},
				   #{availableAmt},
				   sysdate()
			   )
	</insert>

	<insert id="insertPanUserAsset" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
		insert into pan_user_asset(
			user_id,
			balance
		)values(
				   #{userId},
				   '0'
			   )
	</insert>

	<insert id="insertTransHistory" parameterType="TransHistory" keyProperty="userId">
		insert into pan_transaction_history
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">user_id,</if>
			<if test="orUserId != null">or_user_id,</if>
			<if test="transactionType != null">transaction_type,</if>
			<if test="amount != null">amount,</if>
			<if test="remark != null">remark,</if>
			<if test="amountBefore != null">amount_before,</if>
			<if test="amountAfter != null">amount_after,</if>
			<if test="billType != null">bill_type,</if>
			<if test="isIncome != null">is_income,</if>
			transaction_date
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">#{userId},</if>
			<if test="orUserId != null">#{orUserId},</if>
			<if test="transactionType != null">#{transactionType},</if>
			<if test="amount != null">#{amount},</if>
			<if test="remark != null">#{remark},</if>
			<if test="amountBefore != null">#{amountBefore},</if>
			<if test="amountAfter != null">#{amountAfter},</if>
			<if test="billType != null">#{billType},</if>
			<if test="isIncome != null">#{isIncome},</if>
			now()
		</trim>

	</insert>

	<select id="todayRegisterUsers" parameterType="SysUser" resultType="Long">
		SELECT
		     IFNULL( count( user_id ), 0 )
		  FROM
		sys_user
		<where>
			user_type = '10'
			<if test = "topId != null and topId!= ''">AND top_id = #{topId}  </if>
			<if test = "managerId != null and managerId!= ''"> AND manager_id = #{managerId}</if>
			<if test = "agentId != null and agentId!= ''"> AND agent_id = #{agentId}</if>
			<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
				AND <![CDATA[ DATE_FORMAT(create_time,'%Y-%m-%d') >= DATE_FORMAT( #{params.beginTime},'%Y-%m-%d') ]]>
			</if>
			<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
				AND <![CDATA[ DATE_FORMAT(create_time,'%Y-%m-%d') <= DATE_FORMAT( #{params.endTime},'%Y-%m-%d') ]]>
			</if>
		</where>
	</select>

	<select id="selectUserReportList" parameterType="SysUser" resultMap="SysUserResult">
		SELECT
			u.user_id,
			u.user_name,
			u.create_time,
			u2.user_name parent_username,
			u3.user_name top_name,
			u4.user_name manager_name,
			u5.user_name agent_name,
			ub.balance,
			ub.available_amt,
			ub.asset_balance
		FROM
			sys_user u
			LEFT JOIN sys_user u2 ON u.parent_id = u2.user_id
			LEFT JOIN sys_user u3 ON u.top_id = u3.user_id
			LEFT JOIN sys_user u4 ON u.manager_id = u4.user_id
			LEFT JOIN sys_user u5 ON u.agent_id = u5.user_id
			LEFT JOIN pan_user_balance ub ON  u.user_id= ub.user_id
		WHERE
			u.del_flag = '0'
			AND u.user_type = '10'
			<if test="userName != null and userName != ''">
				AND u.user_name  like concat('%',#{userName})
			</if>
			<if test="topId != null and topId!= ''">
				and u.top_id  = #{topId}
			</if>
			<if test="managerId != null and managerId!= ''">
				and u.manager_id  = #{managerId}
			</if>
			<if test="agentId != null and agentId!= ''">
				and u.agent_id  = #{agentId}
			</if>
			<if test="topName != null and topName != ''">
				AND u3.user_name= #{topName}
			</if>
			<if test="managerName != null and managerName != ''">
				AND u4.user_name= #{managerName}
			</if>
			<if test="agentName != null and agentName != ''">
				AND u5.user_name= #{agentName}
			</if>
			<!-- 数据范围过滤 -->
			order by u.create_time asc
		${params.dataScope}
	</select>

    <select id="selectUserTotalCount"  parameterType="SysUser" resultType="java.lang.Integer">
	    SELECT
		   count(u.user_id)
		FROM
		   sys_user u
		<where>
			u.user_type = '10'
			<if test="topId != null and topId!= ''">
				and u.top_id  = #{topId}
			</if>
			<if test="managerId != null and managerId!= ''">
				and u.manager_id  = #{managerId}
			</if>
			<if test="agentId != null and agentId!= ''">
				and u.agent_id  = #{agentId}
			</if>
		</where>
	</select>

	<insert id="insertAgentBalance" parameterType="SysUser" keyProperty="agentId">
		insert into pan_agent_balance
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="agentId != null">agent_id,</if>
			update_at
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="agentId != null">#{agentId},</if>
			now()
		</trim>
	</insert>
</mapper>
